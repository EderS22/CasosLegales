// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace CasosLegales.DataAccess
{
    public partial class DB_CasoslegalesContext : DbContext
    {
        public DB_CasoslegalesContext()
        {
        }

        public DB_CasoslegalesContext(DbContextOptions<DB_CasoslegalesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<TbAbogadosJueces> TbAbogadosJueces { get; set; }
        public virtual DbSet<TbAcusadoPorCaso> TbAcusadoPorCaso { get; set; }
        public virtual DbSet<TbCargos> TbCargos { get; set; }
        public virtual DbSet<TbCasos> TbCasos { get; set; }
        public virtual DbSet<TbCiviles> TbCiviles { get; set; }
        public virtual DbSet<TbDepartamentos> TbDepartamentos { get; set; }
        public virtual DbSet<TbDetallesVeredictos> TbDetallesVeredictos { get; set; }
        public virtual DbSet<TbEmpleados> TbEmpleados { get; set; }
        public virtual DbSet<TbEmpresas> TbEmpresas { get; set; }
        public virtual DbSet<TbEstadosCiviles> TbEstadosCiviles { get; set; }
        public virtual DbSet<TbEvidenciasPorCaso> TbEvidenciasPorCaso { get; set; }
        public virtual DbSet<TbMunicipios> TbMunicipios { get; set; }
        public virtual DbSet<TbPantallas> TbPantallas { get; set; }
        public virtual DbSet<TbRoles> TbRoles { get; set; }
        public virtual DbSet<TbRolesPorPantalla> TbRolesPorPantalla { get; set; }
        public virtual DbSet<TbTestigosPorCaso> TbTestigosPorCaso { get; set; }
        public virtual DbSet<TbTiposdeCaso> TbTiposdeCaso { get; set; }
        public virtual DbSet<TbTiposdeEvidencia> TbTiposdeEvidencia { get; set; }
        public virtual DbSet<TbUsuarios> TbUsuarios { get; set; }
        public virtual DbSet<TbVeredictos> TbVeredictos { get; set; }
        public virtual DbSet<VwTbAbogadosJueces> VwTbAbogadosJueces { get; set; }
        public virtual DbSet<VwTbCargos> VwTbCargos { get; set; }
        public virtual DbSet<VwTbCiviles> VwTbCiviles { get; set; }
        public virtual DbSet<VwTbDepartamentos> VwTbDepartamentos { get; set; }
        public virtual DbSet<VwTbEmpleados> VwTbEmpleados { get; set; }
        public virtual DbSet<VwTbEmpresas> VwTbEmpresas { get; set; }
        public virtual DbSet<VwTbEstadosCiviles> VwTbEstadosCiviles { get; set; }
        public virtual DbSet<VwTbMunicipios> VwTbMunicipios { get; set; }
        public virtual DbSet<VwTbTiposdeCaso> VwTbTiposdeCaso { get; set; }
        public virtual DbSet<VwTbTiposdeEvidencia> VwTbTiposdeEvidencia { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<TbAbogadosJueces>(entity =>
            {
                entity.HasKey(e => e.AbjuId)
                    .HasName("PK_CALE_tbAbogadosJueces_abog_Id");

                entity.ToTable("tbAbogadosJueces", "CALE");

                entity.Property(e => e.AbjuId).HasColumnName("abju_Id");

                entity.Property(e => e.AbjuApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("abju_Apellidos");

                entity.Property(e => e.AbjuCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("abju_CorreoElectronico");

                entity.Property(e => e.AbjuDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("abju_Direccion");

                entity.Property(e => e.AbjuDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("abju_DNI");

                entity.Property(e => e.AbjuEstado)
                    .IsRequired()
                    .HasColumnName("abju_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AbjuFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("abju_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AbjuFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("abju_FechaModificacion");

                entity.Property(e => e.AbjuFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("abju_FechaNacimiento");

                entity.Property(e => e.AbjuNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("abju_Nombres");

                entity.Property(e => e.AbjuSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("abju_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.AbjuTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("abju_Telefono");

                entity.Property(e => e.AbjuUsuCreacion).HasColumnName("abju_UsuCreacion");

                entity.Property(e => e.AbjuUsuModificacion).HasColumnName("abju_UsuModificacion");

                entity.Property(e => e.CargId).HasColumnName("carg_Id");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.HasOne(d => d.AbjuUsuCreacionNavigation)
                    .WithMany(p => p.TbAbogadosJuecesAbjuUsuCreacionNavigation)
                    .HasForeignKey(d => d.AbjuUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.AbjuUsuModificacionNavigation)
                    .WithMany(p => p.TbAbogadosJuecesAbjuUsuModificacionNavigation)
                    .HasForeignKey(d => d.AbjuUsuModificacion)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Carg)
                    .WithMany(p => p.TbAbogadosJueces)
                    .HasForeignKey(d => d.CargId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbCargos_carg_Id");

                entity.HasOne(d => d.Eciv)
                    .WithMany(p => p.TbAbogadosJueces)
                    .HasForeignKey(d => d.EcivId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.TbAbogadosJueces)
                    .HasForeignKey(d => d.MuniId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<TbAcusadoPorCaso>(entity =>
            {
                entity.HasKey(e => e.AcusId)
                    .HasName("PK_CALE_tbAcusadoPorCaso_soca_Id");

                entity.ToTable("tbAcusadoPorCaso", "CALE");

                entity.Property(e => e.AcusId).HasColumnName("acus_Id");

                entity.Property(e => e.AcusAcusado).HasColumnName("acus_Acusado");

                entity.Property(e => e.AcusEstado)
                    .IsRequired()
                    .HasColumnName("acus_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AcusFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("acus_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AcusFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("acus_FechaModificacion");

                entity.Property(e => e.AcusTipoAcusado).HasColumnName("acus_TipoAcusado");

                entity.Property(e => e.AcusUsuCreacion).HasColumnName("acus_UsuCreacion");

                entity.Property(e => e.AcusUsuModificacion).HasColumnName("acus_UsuModificacion");

                entity.Property(e => e.CasoId).HasColumnName("caso_Id");

                entity.HasOne(d => d.AcusUsuCreacionNavigation)
                    .WithMany(p => p.TbAcusadoPorCasoAcusUsuCreacionNavigation)
                    .HasForeignKey(d => d.AcusUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.AcusUsuModificacionNavigation)
                    .WithMany(p => p.TbAcusadoPorCasoAcusUsuModificacionNavigation)
                    .HasForeignKey(d => d.AcusUsuModificacion)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Caso)
                    .WithMany(p => p.TbAcusadoPorCaso)
                    .HasForeignKey(d => d.CasoId)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_CALE_tbCasos_caso_Id");
            });

            modelBuilder.Entity<TbCargos>(entity =>
            {
                entity.HasKey(e => e.CargId)
                    .HasName("PK_GRAL_tbcargos_carg_Id");

                entity.ToTable("tbCargos", "GRAL");

                entity.Property(e => e.CargId).HasColumnName("carg_Id");

                entity.Property(e => e.CargDescripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("carg_Descripcion");

                entity.Property(e => e.CargEstado)
                    .HasColumnName("carg_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CargFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("carg_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CargFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("carg_FechaModificacion");

                entity.Property(e => e.CargUsuCreacion).HasColumnName("carg_UsuCreacion");

                entity.Property(e => e.CargUsuModificacion).HasColumnName("carg_UsuModificacion");

                entity.HasOne(d => d.CargUsuCreacionNavigation)
                    .WithMany(p => p.TbCargosCargUsuCreacionNavigation)
                    .HasForeignKey(d => d.CargUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbCargos_acce_tbUsuarios_carg_UsuCreacion");

                entity.HasOne(d => d.CargUsuModificacionNavigation)
                    .WithMany(p => p.TbCargosCargUsuModificacionNavigation)
                    .HasForeignKey(d => d.CargUsuModificacion)
                    .HasConstraintName("FK_GRAL_tbCargos_acce_tbUsuarios_carg_UsuModificacion");
            });

            modelBuilder.Entity<TbCasos>(entity =>
            {
                entity.HasKey(e => e.CasoId)
                    .HasName("PK_CALE_tbCasos_caso_Id");

                entity.ToTable("tbCasos", "CALE");

                entity.Property(e => e.CasoId).HasColumnName("caso_Id");

                entity.Property(e => e.CasoAbierto).HasColumnName("caso_Abierto");

                entity.Property(e => e.CasoAbogadoDemandado).HasColumnName("caso_AbogadoDemandado");

                entity.Property(e => e.CasoAbogadoDemandante).HasColumnName("caso_AbogadoDemandante");

                entity.Property(e => e.CasoDemandante).HasColumnName("caso_Demandante");

                entity.Property(e => e.CasoDescripcion)
                    .HasMaxLength(200)
                    .HasColumnName("caso_descripcion");

                entity.Property(e => e.CasoEstado)
                    .IsRequired()
                    .HasColumnName("caso_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CasoFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("caso_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CasoFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("caso_FechaModificacion");

                entity.Property(e => e.CasoJuez).HasColumnName("caso_Juez");

                entity.Property(e => e.CasoTipoDemandante)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("caso_TipoDemandante")
                    .IsFixedLength(true);

                entity.Property(e => e.CasoUsuCreacion).HasColumnName("caso_UsuCreacion");

                entity.Property(e => e.CasoUsuModificacion).HasColumnName("caso_UsuModificacion");

                entity.Property(e => e.TicaId).HasColumnName("tica_Id");

                entity.HasOne(d => d.CasoAbogadoDemandadoNavigation)
                    .WithMany(p => p.TbCasosCasoAbogadoDemandadoNavigation)
                    .HasForeignKey(d => d.CasoAbogadoDemandado)
                    .HasConstraintName("FK_CALE_tbCasos_CALE_tbAbogadosJueces_caso_AbogadoDemandado");

                entity.HasOne(d => d.CasoAbogadoDemandanteNavigation)
                    .WithMany(p => p.TbCasosCasoAbogadoDemandanteNavigation)
                    .HasForeignKey(d => d.CasoAbogadoDemandante)
                    .HasConstraintName("FK_CALE_tbCasos_CALE_tbAbogadosJueces_caso_AbogadoDemandante");

                entity.HasOne(d => d.CasoJuezNavigation)
                    .WithMany(p => p.TbCasosCasoJuezNavigation)
                    .HasForeignKey(d => d.CasoJuez)
                    .HasConstraintName("FK_CALE_tbCasos_CALE_tbAbogadosJueces_caso_Juez");

                entity.HasOne(d => d.CasoUsuCreacionNavigation)
                    .WithMany(p => p.TbCasosCasoUsuCreacionNavigation)
                    .HasForeignKey(d => d.CasoUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.CasoUsuModificacionNavigation)
                    .WithMany(p => p.TbCasosCasoUsuModificacionNavigation)
                    .HasForeignKey(d => d.CasoUsuModificacion)
                    .HasConstraintName("FK_CALE_tbCasos_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Tica)
                    .WithMany(p => p.TbCasos)
                    .HasForeignKey(d => d.TicaId)
                    .HasConstraintName("FK_CALE_tbCasos_CALE_tbTiposdeCaso_tica_Id");
            });

            modelBuilder.Entity<TbCiviles>(entity =>
            {
                entity.HasKey(e => e.CiviId)
                    .HasName("PK_CALE_tbCiviles_civi_Id");

                entity.ToTable("tbCiviles", "CALE");

                entity.Property(e => e.CiviId).HasColumnName("civi_Id");

                entity.Property(e => e.CiviApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("civi_Apellidos");

                entity.Property(e => e.CiviCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("civi_CorreoElectronico");

                entity.Property(e => e.CiviDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("civi_Direccion");

                entity.Property(e => e.CiviDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("civi_DNI");

                entity.Property(e => e.CiviEstado)
                    .IsRequired()
                    .HasColumnName("civi_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.CiviFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("civi_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CiviFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("civi_FechaModificacion");

                entity.Property(e => e.CiviFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("civi_FechaNacimiento");

                entity.Property(e => e.CiviNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("civi_Nombres");

                entity.Property(e => e.CiviSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("civi_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.CiviTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("civi_Telefono");

                entity.Property(e => e.CiviUsuCreacion).HasColumnName("civi_UsuCreacion");

                entity.Property(e => e.CiviUsuModificacion).HasColumnName("civi_UsuModificacion");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.HasOne(d => d.CiviUsuCreacionNavigation)
                    .WithMany(p => p.TbCivilesCiviUsuCreacionNavigation)
                    .HasForeignKey(d => d.CiviUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.CiviUsuModificacionNavigation)
                    .WithMany(p => p.TbCivilesCiviUsuModificacionNavigation)
                    .HasForeignKey(d => d.CiviUsuModificacion)
                    .HasConstraintName("FK_CALE_tbCiviles_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Eciv)
                    .WithMany(p => p.TbCiviles)
                    .HasForeignKey(d => d.EcivId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.TbCiviles)
                    .HasForeignKey(d => d.MuniId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<TbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.DepaId)
                    .HasName("PK_GRAL_tbDepartamentos_depa_Id");

                entity.ToTable("tbDepartamentos", "GRAL");

                entity.Property(e => e.DepaId)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaEstado)
                    .IsRequired()
                    .HasColumnName("depa_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DepaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("depa_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("depa_FechaModificacion");

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.DepaUsuCreacion).HasColumnName("depa_UsuCreacion");

                entity.Property(e => e.DepaUsuModificacion).HasColumnName("depa_UsuModificacion");

                entity.HasOne(d => d.DepaUsuCreacionNavigation)
                    .WithMany(p => p.TbDepartamentosDepaUsuCreacionNavigation)
                    .HasForeignKey(d => d.DepaUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbDepartamentos_ACCE_tbUsuarios_depa_UsuCreacion_usua_Id");

                entity.HasOne(d => d.DepaUsuModificacionNavigation)
                    .WithMany(p => p.TbDepartamentosDepaUsuModificacionNavigation)
                    .HasForeignKey(d => d.DepaUsuModificacion)
                    .HasConstraintName("FK_GRAL_tbDepartamentos_ACCE_tbUsuarios_depa_UsuModificacion_usua_Id");
            });

            modelBuilder.Entity<TbDetallesVeredictos>(entity =>
            {
                entity.HasKey(e => e.DeveId)
                    .HasName("PK_CALE_tbDetallesVeredictos_deve_Id");

                entity.ToTable("tbDetallesVeredictos", "CALE");

                entity.Property(e => e.DeveId).HasColumnName("deve_Id");

                entity.Property(e => e.DeveEmpresaCivil).HasColumnName("deve_EmpresaCivil");

                entity.Property(e => e.DeveEsInocente).HasColumnName("deve_EsInocente");

                entity.Property(e => e.DeveEsculpable).HasColumnName("deve_ESCulpable");

                entity.Property(e => e.DeveEstado)
                    .IsRequired()
                    .HasColumnName("deve_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.DeveFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("deve_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DeveFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("deve_FechaModificacion");

                entity.Property(e => e.DeveTipoEmpresaCivil)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("deve_TipoEmpresaCivil")
                    .IsFixedLength(true);

                entity.Property(e => e.DeveUsuCreacion).HasColumnName("deve_UsuCreacion");

                entity.Property(e => e.DeveUsuModificacion).HasColumnName("deve_UsuModificacion");

                entity.Property(e => e.VereId).HasColumnName("vere_Id");

                entity.HasOne(d => d.DeveUsuCreacionNavigation)
                    .WithMany(p => p.TbDetallesVeredictosDeveUsuCreacionNavigation)
                    .HasForeignKey(d => d.DeveUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.DeveUsuModificacionNavigation)
                    .WithMany(p => p.TbDetallesVeredictosDeveUsuModificacionNavigation)
                    .HasForeignKey(d => d.DeveUsuModificacion)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Vere)
                    .WithMany(p => p.TbDetallesVeredictos)
                    .HasForeignKey(d => d.VereId)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_CALE_TBvEREDICTOS_vere_Id");
            });

            modelBuilder.Entity<TbEmpleados>(entity =>
            {
                entity.HasKey(e => e.EmpeId)
                    .HasName("PK_CALE_tbEmpleados_empe_Id");

                entity.ToTable("tbEmpleados", "CALE");

                entity.Property(e => e.EmpeId).HasColumnName("empe_Id");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EmpeApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("empe_Apellidos");

                entity.Property(e => e.EmpeCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("empe_CorreoElectronico");

                entity.Property(e => e.EmpeDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("empe_Direccion");

                entity.Property(e => e.EmpeDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("empe_DNI");

                entity.Property(e => e.EmpeEstado)
                    .IsRequired()
                    .HasColumnName("empe_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EmpeFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("empe_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmpeFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("empe_FechaModificacion");

                entity.Property(e => e.EmpeFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("empe_FechaNacimiento");

                entity.Property(e => e.EmpeNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("empe_Nombres");

                entity.Property(e => e.EmpeSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("empe_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.EmpeTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("empe_Telefono");

                entity.Property(e => e.EmpeUsuCreacion).HasColumnName("empe_UsuCreacion");

                entity.Property(e => e.EmpeUsuModificacion).HasColumnName("empe_UsuModificacion");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.HasOne(d => d.Eciv)
                    .WithMany(p => p.TbEmpleados)
                    .HasForeignKey(d => d.EcivId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.EmpeUsuCreacionNavigation)
                    .WithMany(p => p.TbEmpleadosEmpeUsuCreacionNavigation)
                    .HasForeignKey(d => d.EmpeUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.EmpeUsuModificacionNavigation)
                    .WithMany(p => p.TbEmpleadosEmpeUsuModificacionNavigation)
                    .HasForeignKey(d => d.EmpeUsuModificacion)
                    .HasConstraintName("FK_CALE_tbEmpleados_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.TbEmpleados)
                    .HasForeignKey(d => d.MuniId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<TbEmpresas>(entity =>
            {
                entity.HasKey(e => e.EmsaId)
                    .HasName("PK_CALE_tbEmpresas_emsa_Id");

                entity.ToTable("tbEmpresas", "CALE");

                entity.Property(e => e.EmsaId).HasColumnName("emsa_Id");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EmsaDireccion)
                    .HasMaxLength(250)
                    .HasColumnName("emsa_Direccion");

                entity.Property(e => e.EmsaEsAcusado).HasColumnName("emsa_EsAcusado");

                entity.Property(e => e.EmsaEsDemandante).HasColumnName("emsa_EsDemandante");

                entity.Property(e => e.EmsaEstado)
                    .IsRequired()
                    .HasColumnName("emsa_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EmsaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("emsa_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmsaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("emsa_FechaModificacion");

                entity.Property(e => e.EmsaNombre)
                    .HasMaxLength(200)
                    .HasColumnName("emsa_Nombre");

                entity.Property(e => e.EmsaRepresentanteDni)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RepresentanteDNI");

                entity.Property(e => e.EmsaRepresentanteNombre)
                    .HasMaxLength(200)
                    .HasColumnName("emsa_RepresentanteNombre");

                entity.Property(e => e.EmsaRepresentanteSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("emsa_RepresentanteSexo")
                    .IsFixedLength(true);

                entity.Property(e => e.EmsaRepresentanteTelefono)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RepresentanteTelefono");

                entity.Property(e => e.EmsaRnt)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RNT");

                entity.Property(e => e.EmsaUsuCreacion).HasColumnName("emsa_UsuCreacion");

                entity.Property(e => e.EmsaUsuModificacion).HasColumnName("emsa_UsuModificacion");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.HasOne(d => d.Eciv)
                    .WithMany(p => p.TbEmpresas)
                    .HasForeignKey(d => d.EcivId)
                    .HasConstraintName("FK_CALE_tbEmpresas_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.EmsaUsuCreacionNavigation)
                    .WithMany(p => p.TbEmpresasEmsaUsuCreacionNavigation)
                    .HasForeignKey(d => d.EmsaUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpresas_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.EmsaUsuModificacionNavigation)
                    .WithMany(p => p.TbEmpresasEmsaUsuModificacionNavigation)
                    .HasForeignKey(d => d.EmsaUsuModificacion)
                    .HasConstraintName("FK_CALE_tbEmpresas_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Muni)
                    .WithMany(p => p.TbEmpresas)
                    .HasForeignKey(d => d.MuniId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpresas_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<TbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.EcivId)
                    .HasName("PK_GRAL_tbEstadosCiviles_eciv_Id");

                entity.ToTable("tbEstadosCiviles", "GRAL");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EcivDescripcion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("eciv_Descripcion");

                entity.Property(e => e.EcivEstado)
                    .HasColumnName("eciv_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EcivFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("eciv_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EcivFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("eciv_FechaModificacion");

                entity.Property(e => e.EcivUsuCreacion).HasColumnName("eciv_UsuCreacion");

                entity.Property(e => e.EcivUsuModificacion).HasColumnName("eciv_UsuModificacion");
            });

            modelBuilder.Entity<TbEvidenciasPorCaso>(entity =>
            {
                entity.HasKey(e => e.EvcaId)
                    .HasName("PK_CALE_tbEvidenciasPorCaso_evca_Id");

                entity.ToTable("tbEvidenciasPorCaso", "CALE");

                entity.Property(e => e.EvcaId).HasColumnName("evca_Id");

                entity.Property(e => e.CasoId).HasColumnName("caso_Id");

                entity.Property(e => e.EvcaDescripcion)
                    .HasMaxLength(300)
                    .HasColumnName("evca_Descripcion");

                entity.Property(e => e.EvcaEstado)
                    .IsRequired()
                    .HasColumnName("evca_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.EvcaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("evca_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EvcaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("evca_FechaModificacion");

                entity.Property(e => e.EvcaUsuCreacion).HasColumnName("evca_UsuCreacion");

                entity.Property(e => e.EvcaUsuModificacion).HasColumnName("evca_UsuModificacion");

                entity.Property(e => e.TievId).HasColumnName("tiev_Id");

                entity.HasOne(d => d.Caso)
                    .WithMany(p => p.TbEvidenciasPorCaso)
                    .HasForeignKey(d => d.CasoId)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.EvcaUsuCreacionNavigation)
                    .WithMany(p => p.TbEvidenciasPorCasoEvcaUsuCreacionNavigation)
                    .HasForeignKey(d => d.EvcaUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.EvcaUsuModificacionNavigation)
                    .WithMany(p => p.TbEvidenciasPorCasoEvcaUsuModificacionNavigation)
                    .HasForeignKey(d => d.EvcaUsuModificacion)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.Tiev)
                    .WithMany(p => p.TbEvidenciasPorCaso)
                    .HasForeignKey(d => d.TievId)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_CALE_tbTiposdeEvidencia_tiev_Id");
            });

            modelBuilder.Entity<TbMunicipios>(entity =>
            {
                entity.HasKey(e => e.MuniId)
                    .HasName("PK_GRAL_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "GRAL");

                entity.Property(e => e.MuniId)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniEstado)
                    .IsRequired()
                    .HasColumnName("muni_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MuniFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("muni_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.MuniFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("muni_FechaModificacion");

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");

                entity.Property(e => e.MuniUsuCreacion).HasColumnName("muni_UsuCreacion");

                entity.Property(e => e.MuniUsuModificacion).HasColumnName("muni_UsuModificacion");

                entity.HasOne(d => d.Depa)
                    .WithMany(p => p.TbMunicipios)
                    .HasForeignKey(d => d.DepaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbMunicipios_GRAL_tbDepartamentos_depa_Id");

                entity.HasOne(d => d.MuniUsuCreacionNavigation)
                    .WithMany(p => p.TbMunicipiosMuniUsuCreacionNavigation)
                    .HasForeignKey(d => d.MuniUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbMunicipios_ACCE_tbUsuarios_muni_UsuCreacion_usua_Id");

                entity.HasOne(d => d.MuniUsuModificacionNavigation)
                    .WithMany(p => p.TbMunicipiosMuniUsuModificacionNavigation)
                    .HasForeignKey(d => d.MuniUsuModificacion)
                    .HasConstraintName("FK_GRAL_tbMunicipios_ACCE_tbUsuarios_muni_UsuModificacion_usua_Id");
            });

            modelBuilder.Entity<TbPantallas>(entity =>
            {
                entity.HasKey(e => e.PantId)
                    .HasName("PK_ACCE_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "ACCE");

                entity.Property(e => e.PantId).HasColumnName("pant_Id");

                entity.Property(e => e.PantEsquema)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("pant_Esquema");

                entity.Property(e => e.PantEstado)
                    .HasColumnName("pant_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PantFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("pant_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PantFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("pant_FechaModificacion");

                entity.Property(e => e.PantHref)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("pant_Href");

                entity.Property(e => e.PantIcono)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("pant_Icono");

                entity.Property(e => e.PantPantalla)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("pant_Pantalla");

                entity.Property(e => e.UsuaIdCreacion).HasColumnName("usua_IdCreacion");

                entity.Property(e => e.UsuaIdModificacion).HasColumnName("usua_IdModificacion");

                entity.HasOne(d => d.UsuaIdCreacionNavigation)
                    .WithMany(p => p.TbPantallasUsuaIdCreacionNavigation)
                    .HasForeignKey(d => d.UsuaIdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbPantallas_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.UsuaIdModificacionNavigation)
                    .WithMany(p => p.TbPantallasUsuaIdModificacionNavigation)
                    .HasForeignKey(d => d.UsuaIdModificacion)
                    .HasConstraintName("FK_ACCE_tbPantallas_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<TbRoles>(entity =>
            {
                entity.HasKey(e => e.RoleId)
                    .HasName("PK_ACCE_tbRoles_role_Id");

                entity.ToTable("tbRoles", "ACCE");

                entity.Property(e => e.RoleId).HasColumnName("role_Id");

                entity.Property(e => e.RoleDescripcion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("role_Descripcion");

                entity.Property(e => e.RoleEstado)
                    .HasColumnName("role_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RoleFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("role_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RoleFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("role_FechaModificacion");

                entity.Property(e => e.RoleNombre)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("role_Nombre");

                entity.Property(e => e.UsuaIdCreacion).HasColumnName("usua_IdCreacion");

                entity.Property(e => e.UsuaIdModificacion).HasColumnName("usua_IdModificacion");

                entity.HasOne(d => d.UsuaIdCreacionNavigation)
                    .WithMany(p => p.TbRolesUsuaIdCreacionNavigation)
                    .HasForeignKey(d => d.UsuaIdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRoles_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.UsuaIdModificacionNavigation)
                    .WithMany(p => p.TbRolesUsuaIdModificacionNavigation)
                    .HasForeignKey(d => d.UsuaIdModificacion)
                    .HasConstraintName("FK_ACCE_tbRoles_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<TbRolesPorPantalla>(entity =>
            {
                entity.HasKey(e => e.RopaId)
                    .HasName("PK_ACCE_tbRolesPorPantalla_ropa_Id");

                entity.ToTable("tbRolesPorPantalla", "ACCE");

                entity.Property(e => e.RopaId).HasColumnName("ropa_Id");

                entity.Property(e => e.PantId).HasColumnName("pant_Id");

                entity.Property(e => e.RoleId).HasColumnName("role_Id");

                entity.Property(e => e.RopaEstado)
                    .HasColumnName("ropa_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RopaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("ropa_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RopaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("ropa_FechaModificacion");

                entity.Property(e => e.UsuaIdCreacion).HasColumnName("usua_IdCreacion");

                entity.Property(e => e.UsuaIdModificacion).HasColumnName("usua_IdModificacion");

                entity.HasOne(d => d.Pant)
                    .WithMany(p => p.TbRolesPorPantalla)
                    .HasForeignKey(d => d.PantId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_pant_Id_ACCE_tbPantallas_pant_Id");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.TbRolesPorPantalla)
                    .HasForeignKey(d => d.RoleId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_role_Id_ACCE_tbRoles_role_Id");

                entity.HasOne(d => d.UsuaIdCreacionNavigation)
                    .WithMany(p => p.TbRolesPorPantallaUsuaIdCreacionNavigation)
                    .HasForeignKey(d => d.UsuaIdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.UsuaIdModificacionNavigation)
                    .WithMany(p => p.TbRolesPorPantallaUsuaIdModificacionNavigation)
                    .HasForeignKey(d => d.UsuaIdModificacion)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<TbTestigosPorCaso>(entity =>
            {
                entity.HasKey(e => e.TecaId)
                    .HasName("PK_CALE_tbTestigosPorCaso_teca_Id");

                entity.ToTable("tbTestigosPorCaso", "CALE");

                entity.Property(e => e.TecaId).HasColumnName("teca_Id");

                entity.Property(e => e.CasoId).HasColumnName("caso_Id");

                entity.Property(e => e.TecaEstado)
                    .IsRequired()
                    .HasColumnName("teca_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TecaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("teca_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TecaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("teca_FechaModificacion");

                entity.Property(e => e.TecaTestigo).HasColumnName("teca_Testigo");

                entity.Property(e => e.TecaUsuCreacion).HasColumnName("teca_UsuCreacion");

                entity.Property(e => e.TecaUsuModificacion).HasColumnName("teca_UsuModificacion");

                entity.HasOne(d => d.Caso)
                    .WithMany(p => p.TbTestigosPorCaso)
                    .HasForeignKey(d => d.CasoId)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.TecaTestigoNavigation)
                    .WithMany(p => p.TbTestigosPorCaso)
                    .HasForeignKey(d => d.TecaTestigo)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_CALE_tbCiviles_civi_Id");

                entity.HasOne(d => d.TecaUsuCreacionNavigation)
                    .WithMany(p => p.TbTestigosPorCasoTecaUsuCreacionNavigation)
                    .HasForeignKey(d => d.TecaUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.TecaUsuModificacionNavigation)
                    .WithMany(p => p.TbTestigosPorCasoTecaUsuModificacionNavigation)
                    .HasForeignKey(d => d.TecaUsuModificacion)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<TbTiposdeCaso>(entity =>
            {
                entity.HasKey(e => e.TicaId)
                    .HasName("PK_CALE_tbTiposdeCaso_tica_Id");

                entity.ToTable("tbTiposdeCaso", "CALE");

                entity.Property(e => e.TicaId).HasColumnName("tica_Id");

                entity.Property(e => e.TicaDescripcion)
                    .HasMaxLength(200)
                    .HasColumnName("tica_Descripcion");

                entity.Property(e => e.TicaEstado)
                    .IsRequired()
                    .HasColumnName("tica_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TicaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tica_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TicaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tica_FechaModificacion");

                entity.Property(e => e.TicaNombre)
                    .HasMaxLength(100)
                    .HasColumnName("tica_Nombre");

                entity.Property(e => e.TicaUsuCreacion).HasColumnName("tica_UsuCreacion");

                entity.Property(e => e.TicaUsuModificacion).HasColumnName("tica_UsuModificacion");

                entity.HasOne(d => d.TicaUsuCreacionNavigation)
                    .WithMany(p => p.TbTiposdeCasoTicaUsuCreacionNavigation)
                    .HasForeignKey(d => d.TicaUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTiposdeCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.TicaUsuModificacionNavigation)
                    .WithMany(p => p.TbTiposdeCasoTicaUsuModificacionNavigation)
                    .HasForeignKey(d => d.TicaUsuModificacion)
                    .HasConstraintName("FK_CALE_tbTiposdeCaso_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<TbTiposdeEvidencia>(entity =>
            {
                entity.HasKey(e => e.TievId)
                    .HasName("PK_CALE_tbTiposdeEvidencia_tiev_Id");

                entity.ToTable("tbTiposdeEvidencia", "CALE");

                entity.Property(e => e.TievId).HasColumnName("tiev_Id");

                entity.Property(e => e.TievDescripcion)
                    .HasMaxLength(200)
                    .HasColumnName("tiev_Descripcion");

                entity.Property(e => e.TievEstado)
                    .IsRequired()
                    .HasColumnName("tiev_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.TievFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tiev_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TievFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tiev_FechaModificacion");

                entity.Property(e => e.TievNombre)
                    .HasMaxLength(100)
                    .HasColumnName("tiev_Nombre");

                entity.Property(e => e.TievUsuCreacion).HasColumnName("tiev_UsuCreacion");

                entity.Property(e => e.TievUsuModificacion).HasColumnName("tiev_UsuModificacion");

                entity.HasOne(d => d.TievUsuCreacionNavigation)
                    .WithMany(p => p.TbTiposdeEvidenciaTievUsuCreacionNavigation)
                    .HasForeignKey(d => d.TievUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTiposdeEvidencia_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.TievUsuModificacionNavigation)
                    .WithMany(p => p.TbTiposdeEvidenciaTievUsuModificacionNavigation)
                    .HasForeignKey(d => d.TievUsuModificacion)
                    .HasConstraintName("FK_CALE_tbTiposdeEvidencia_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<TbUsuarios>(entity =>
            {
                entity.HasKey(e => e.UsuaId)
                    .HasName("PK_ACCE_tbUsuarios_usua_Id");

                entity.ToTable("tbUsuarios", "ACCE");

                entity.Property(e => e.UsuaId).HasColumnName("usua_Id");

                entity.Property(e => e.EmpeId).HasColumnName("empe_Id");

                entity.Property(e => e.RoleId).HasColumnName("role_Id");

                entity.Property(e => e.UsuaClave)
                    .IsRequired()
                    .HasColumnName("usua_Clave");

                entity.Property(e => e.UsuaEsAdmin)
                    .HasColumnName("usua_EsAdmin")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.UsuaEstado)
                    .HasColumnName("usua_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.UsuaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("usua_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UsuaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("usua_FechaModificacion");

                entity.Property(e => e.UsuaIdCreacion).HasColumnName("usua_IdCreacion");

                entity.Property(e => e.UsuaIdModificacion).HasColumnName("usua_IdModificacion");

                entity.Property(e => e.UsuaNombre)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("usua_Nombre");

                entity.HasOne(d => d.Role)
                    .WithMany(p => p.TbUsuarios)
                    .HasForeignKey(d => d.RoleId)
                    .HasConstraintName("FK_ACCE_tbUsuarios_role_Id_ACCE_tbRoles_role_Id");

                entity.HasOne(d => d.UsuaIdCreacionNavigation)
                    .WithMany(p => p.InverseUsuaIdCreacionNavigation)
                    .HasForeignKey(d => d.UsuaIdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbUsuarios_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.UsuaIdModificacionNavigation)
                    .WithMany(p => p.InverseUsuaIdModificacionNavigation)
                    .HasForeignKey(d => d.UsuaIdModificacion)
                    .HasConstraintName("FK_ACCE_tbUsuarios_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<TbVeredictos>(entity =>
            {
                entity.HasKey(e => e.VereId)
                    .HasName("PK_CALE_tbVeredictos_teca_Id");

                entity.ToTable("tbVeredictos", "CALE");

                entity.Property(e => e.VereId).HasColumnName("vere_Id");

                entity.Property(e => e.CasoId).HasColumnName("caso_Id");

                entity.Property(e => e.VereDescripcion)
                    .HasMaxLength(300)
                    .HasColumnName("vere_Descripcion");

                entity.Property(e => e.VereEstado)
                    .IsRequired()
                    .HasColumnName("vere_Estado")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.VereFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("vere_FechaCreacion")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VereFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("vere_FechaModificacion");

                entity.Property(e => e.VereUsuCreacion).HasColumnName("vere_UsuCreacion");

                entity.Property(e => e.VereUsuModificacion).HasColumnName("vere_UsuModificacion");

                entity.HasOne(d => d.Caso)
                    .WithMany(p => p.TbVeredictos)
                    .HasForeignKey(d => d.CasoId)
                    .HasConstraintName("FK_CALE_tbVeredictos_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.VereUsuCreacionNavigation)
                    .WithMany(p => p.TbVeredictosVereUsuCreacionNavigation)
                    .HasForeignKey(d => d.VereUsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbVeredictos_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.VereUsuModificacionNavigation)
                    .WithMany(p => p.TbVeredictosVereUsuModificacionNavigation)
                    .HasForeignKey(d => d.VereUsuModificacion)
                    .HasConstraintName("FK_CALE_tbVeredictos_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<VwTbAbogadosJueces>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAbogadosJueces", "CALE");

                entity.Property(e => e.AbjuApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("abju_Apellidos");

                entity.Property(e => e.AbjuCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("abju_CorreoElectronico");

                entity.Property(e => e.AbjuDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("abju_Direccion");

                entity.Property(e => e.AbjuDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("abju_DNI");

                entity.Property(e => e.AbjuEstado).HasColumnName("abju_Estado");

                entity.Property(e => e.AbjuFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("abju_FechaCreacion");

                entity.Property(e => e.AbjuFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("abju_FechaModificacion");

                entity.Property(e => e.AbjuFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("abju_FechaNacimiento");

                entity.Property(e => e.AbjuId).HasColumnName("abju_Id");

                entity.Property(e => e.AbjuNombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401)
                    .HasColumnName("abju_NombreCompleto");

                entity.Property(e => e.AbjuNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("abju_Nombres");

                entity.Property(e => e.AbjuSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("abju_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.AbjuTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("abju_Telefono");

                entity.Property(e => e.AbjuUsuCreacion).HasColumnName("abju_UsuCreacion");

                entity.Property(e => e.AbjuUsuModificacion).HasColumnName("abju_UsuModificacion");

                entity.Property(e => e.CargDescripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("carg_Descripcion");

                entity.Property(e => e.CargId).HasColumnName("carg_Id");

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.EcivDescripcion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("eciv_Descripcion");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbCargos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCargos", "GRAL");

                entity.Property(e => e.CargDescripcion)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("carg_Descripcion");

                entity.Property(e => e.CargEstado).HasColumnName("carg_Estado");

                entity.Property(e => e.CargFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("carg_FechaCreacion");

                entity.Property(e => e.CargFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("carg_FechaModificacion");

                entity.Property(e => e.CargId).HasColumnName("carg_Id");

                entity.Property(e => e.CargUsuCreacion).HasColumnName("carg_UsuCreacion");

                entity.Property(e => e.CargUsuModificacion).HasColumnName("carg_UsuModificacion");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCiviles", "CALE");

                entity.Property(e => e.CiviApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("civi_Apellidos");

                entity.Property(e => e.CiviCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("civi_CorreoElectronico");

                entity.Property(e => e.CiviDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("civi_Direccion");

                entity.Property(e => e.CiviDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("civi_DNI");

                entity.Property(e => e.CiviEstado).HasColumnName("civi_Estado");

                entity.Property(e => e.CiviFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("civi_FechaCreacion");

                entity.Property(e => e.CiviFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("civi_FechaModificacion");

                entity.Property(e => e.CiviFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("civi_FechaNacimiento");

                entity.Property(e => e.CiviId).HasColumnName("civi_Id");

                entity.Property(e => e.CiviNombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401)
                    .HasColumnName("civi_NombreCompleto");

                entity.Property(e => e.CiviNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("civi_Nombres");

                entity.Property(e => e.CiviSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("civi_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.CiviTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("civi_Telefono");

                entity.Property(e => e.CiviUsuCreacion).HasColumnName("civi_UsuCreacion");

                entity.Property(e => e.CiviUsuModificacion).HasColumnName("civi_UsuModificacion");

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbDepartamentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDepartamentos", "GRAL");

                entity.Property(e => e.DepaEstado).HasColumnName("depa_Estado");

                entity.Property(e => e.DepaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("depa_FechaCreacion");

                entity.Property(e => e.DepaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("depa_FechaModificacion");

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.DepaUsuCreacion).HasColumnName("depa_UsuCreacion");

                entity.Property(e => e.DepaUsuModificacion).HasColumnName("depa_UsuModificacion");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbEmpleados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEmpleados", "CALE");

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.EcivDescripcion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("eciv_Descripcion");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EmpeApellidos)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("empe_Apellidos");

                entity.Property(e => e.EmpeCorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150)
                    .HasColumnName("empe_CorreoElectronico");

                entity.Property(e => e.EmpeDireccion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("empe_Direccion");

                entity.Property(e => e.EmpeDni)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("empe_DNI");

                entity.Property(e => e.EmpeEstado).HasColumnName("empe_Estado");

                entity.Property(e => e.EmpeFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("empe_FechaCreacion");

                entity.Property(e => e.EmpeFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("empe_FechaModificacion");

                entity.Property(e => e.EmpeFechaNacimiento)
                    .HasColumnType("date")
                    .HasColumnName("empe_FechaNacimiento");

                entity.Property(e => e.EmpeId).HasColumnName("empe_Id");

                entity.Property(e => e.EmpeNombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401)
                    .HasColumnName("empe_NombreCompleto");

                entity.Property(e => e.EmpeNombres)
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnName("empe_Nombres");

                entity.Property(e => e.EmpeSexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("empe_Sexo")
                    .IsFixedLength(true);

                entity.Property(e => e.EmpeTelefono)
                    .IsRequired()
                    .HasMaxLength(20)
                    .HasColumnName("empe_Telefono");

                entity.Property(e => e.EmpeUsuCreacion).HasColumnName("empe_UsuCreacion");

                entity.Property(e => e.EmpeUsuModificacion).HasColumnName("empe_UsuModificacion");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbEmpresas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEmpresas", "CALE");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EmsaDireccion)
                    .HasMaxLength(250)
                    .HasColumnName("emsa_Direccion");

                entity.Property(e => e.EmsaEsAcusado).HasColumnName("emsa_EsAcusado");

                entity.Property(e => e.EmsaEsDemandante).HasColumnName("emsa_EsDemandante");

                entity.Property(e => e.EmsaEstado).HasColumnName("emsa_Estado");

                entity.Property(e => e.EmsaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("emsa_FechaCreacion");

                entity.Property(e => e.EmsaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("emsa_FechaModificacion");

                entity.Property(e => e.EmsaId).HasColumnName("emsa_Id");

                entity.Property(e => e.EmsaNombre)
                    .HasMaxLength(200)
                    .HasColumnName("emsa_Nombre");

                entity.Property(e => e.EmsaRepresentanteDni)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RepresentanteDNI");

                entity.Property(e => e.EmsaRepresentanteNombre)
                    .HasMaxLength(200)
                    .HasColumnName("emsa_RepresentanteNombre");

                entity.Property(e => e.EmsaRepresentanteSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("emsa_RepresentanteSexo")
                    .IsFixedLength(true);

                entity.Property(e => e.EmsaRepresentanteTelefono)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RepresentanteTelefono");

                entity.Property(e => e.EmsaRnt)
                    .HasMaxLength(20)
                    .HasColumnName("emsa_RNT");

                entity.Property(e => e.EmsaUsuCreacion).HasColumnName("emsa_UsuCreacion");

                entity.Property(e => e.EmsaUsuModificacion).HasColumnName("emsa_UsuModificacion");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");
            });

            modelBuilder.Entity<VwTbEstadosCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEstadosCiviles", "GRAL");

                entity.Property(e => e.EcivDescripcion)
                    .IsRequired()
                    .HasMaxLength(250)
                    .HasColumnName("eciv_Descripcion");

                entity.Property(e => e.EcivEstado).HasColumnName("eciv_Estado");

                entity.Property(e => e.EcivFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("eciv_FechaCreacion");

                entity.Property(e => e.EcivFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("eciv_FechaModificacion");

                entity.Property(e => e.EcivId).HasColumnName("eciv_Id");

                entity.Property(e => e.EcivUsuCreacion).HasColumnName("eciv_UsuCreacion");

                entity.Property(e => e.EcivUsuModificacion).HasColumnName("eciv_UsuModificacion");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbMunicipios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMunicipios", "GRAL");

                entity.Property(e => e.DepaId)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .HasColumnName("depa_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.DepaNombre)
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnName("depa_Nombre");

                entity.Property(e => e.MuniEstado).HasColumnName("muni_Estado");

                entity.Property(e => e.MuniFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("muni_FechaCreacion");

                entity.Property(e => e.MuniFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("muni_FechaModificacion");

                entity.Property(e => e.MuniId)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("muni_Id")
                    .IsFixedLength(true);

                entity.Property(e => e.MuniNombre)
                    .IsRequired()
                    .HasMaxLength(80)
                    .HasColumnName("muni_Nombre");

                entity.Property(e => e.MuniUsuCreacion).HasColumnName("muni_UsuCreacion");

                entity.Property(e => e.MuniUsuModificacion).HasColumnName("muni_UsuModificacion");

                entity.Property(e => e.UserCreacion)
                    .IsRequired()
                    .HasMaxLength(255)
                    .HasColumnName("user_Creacion");

                entity.Property(e => e.UserModificacion)
                    .HasMaxLength(255)
                    .HasColumnName("user_Modificacion");
            });

            modelBuilder.Entity<VwTbTiposdeCaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposdeCaso", "CALE");

                entity.Property(e => e.TicaDescripcion)
                    .HasMaxLength(200)
                    .HasColumnName("tica_Descripcion");

                entity.Property(e => e.TicaEstado).HasColumnName("tica_Estado");

                entity.Property(e => e.TicaFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tica_FechaCreacion");

                entity.Property(e => e.TicaFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tica_FechaModificacion");

                entity.Property(e => e.TicaId).HasColumnName("tica_Id");

                entity.Property(e => e.TicaNombre)
                    .HasMaxLength(100)
                    .HasColumnName("tica_Nombre");

                entity.Property(e => e.TicaUsuCreacion).HasColumnName("tica_UsuCreacion");

                entity.Property(e => e.TicaUsuModificacion).HasColumnName("tica_UsuModificacion");
            });

            modelBuilder.Entity<VwTbTiposdeEvidencia>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposdeEvidencia", "CALE");

                entity.Property(e => e.TievDescripcion)
                    .HasMaxLength(200)
                    .HasColumnName("tiev_Descripcion");

                entity.Property(e => e.TievEstado).HasColumnName("tiev_Estado");

                entity.Property(e => e.TievFechaCreacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tiev_FechaCreacion");

                entity.Property(e => e.TievFechaModificacion)
                    .HasColumnType("datetime")
                    .HasColumnName("tiev_FechaModificacion");

                entity.Property(e => e.TievId).HasColumnName("tiev_Id");

                entity.Property(e => e.TievNombre)
                    .HasMaxLength(100)
                    .HasColumnName("tiev_Nombre");

                entity.Property(e => e.TievUsuCreacion).HasColumnName("tiev_UsuCreacion");

                entity.Property(e => e.TievUsuModificacion).HasColumnName("tiev_UsuModificacion");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}