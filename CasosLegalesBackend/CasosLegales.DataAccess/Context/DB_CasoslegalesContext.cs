// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using CasosLegales.Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace CasosLegales.DataAccess.Context
{
    public partial class DB_CasoslegalesContext : DbContext
    {
        public DB_CasoslegalesContext()
        {
        }

        public DB_CasoslegalesContext(DbContextOptions<DB_CasoslegalesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VW_tbAbogadosJueces> VW_tbAbogadosJueces { get; set; }
        public virtual DbSet<VW_tbAcusadoPorCaso> VW_tbAcusadoPorCaso { get; set; }
        public virtual DbSet<VW_tbCargos> VW_tbCargos { get; set; }
        public virtual DbSet<VW_tbCasos> VW_tbCasos { get; set; }
        public virtual DbSet<VW_tbCiviles> VW_tbCiviles { get; set; }
        public virtual DbSet<VW_tbDepartamentos> VW_tbDepartamentos { get; set; }
        public virtual DbSet<VW_tbEmpleados> VW_tbEmpleados { get; set; }
        public virtual DbSet<VW_tbEmpresas> VW_tbEmpresas { get; set; }
        public virtual DbSet<VW_tbEstadosCiviles> VW_tbEstadosCiviles { get; set; }
        public virtual DbSet<VW_tbEvidenciasPorCaso> VW_tbEvidenciasPorCaso { get; set; }
        public virtual DbSet<VW_tbMunicipios> VW_tbMunicipios { get; set; }
        public virtual DbSet<VW_tbTiposdeCaso> VW_tbTiposdeCaso { get; set; }
        public virtual DbSet<VW_tbTiposdeEvidencia> VW_tbTiposdeEvidencia { get; set; }
        public virtual DbSet<tbAbogadosJueces> tbAbogadosJueces { get; set; }
        public virtual DbSet<tbAcusadoPorCaso> tbAcusadoPorCaso { get; set; }
        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCasos> tbCasos { get; set; }
        public virtual DbSet<tbCiviles> tbCiviles { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbDetallesVeredictos> tbDetallesVeredictos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEmpresas> tbEmpresas { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbEvidenciasPorCaso> tbEvidenciasPorCaso { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbRolesPorPantalla> tbRolesPorPantalla { get; set; }
        public virtual DbSet<tbTestigosPorCaso> tbTestigosPorCaso { get; set; }
        public virtual DbSet<tbTiposdeCaso> tbTiposdeCaso { get; set; }
        public virtual DbSet<tbTiposdeEvidencia> tbTiposdeEvidencia { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVeredictos> tbVeredictos { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<VW_tbAbogadosJueces>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAbogadosJueces", "CALE");

                entity.Property(e => e.abju_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.abju_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.abju_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.abju_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.abju_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.abju_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.abju_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.abju_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.abju_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.abju_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.abju_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbAcusadoPorCaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbAcusadoPorCaso", "CALE");

                entity.Property(e => e.acus_AcusadoDatos).HasMaxLength(401);

                entity.Property(e => e.acus_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.acus_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.acus_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.acus_TipoAcusado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);
            });

            modelBuilder.Entity<VW_tbCargos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCargos", "GRAL");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbCasos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCasos", "CALE");

                entity.Property(e => e.abju_AbogadoDemandadoNombre)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.abju_AbogadoDemandanteNombre)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.abju_AbogadoNombre)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.caso_DemandanteNombre).HasMaxLength(401);

                entity.Property(e => e.caso_Descripcion).HasMaxLength(200);

                entity.Property(e => e.caso_Fecha).HasColumnType("date");

                entity.Property(e => e.caso_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.caso_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.caso_TipoDemandante)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.tica_Nombre).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbCiviles", "CALE");

                entity.Property(e => e.civi_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.civi_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.civi_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.civi_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.civi_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.civi_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.civi_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.civi_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.civi_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.civi_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.civi_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbDepartamentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDepartamentos", "GRAL");

                entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbEmpleados>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEmpleados", "CALE");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.empe_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empe_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.empe_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.empe_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.empe_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empe_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empe_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empe_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.empe_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empe_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empe_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbEmpresas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEmpresas", "CALE");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.emsa_Direccion).HasMaxLength(250);

                entity.Property(e => e.emsa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.emsa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.emsa_Nombre).HasMaxLength(200);

                entity.Property(e => e.emsa_RTN).HasMaxLength(20);

                entity.Property(e => e.emsa_RepresentanteDNI).HasMaxLength(20);

                entity.Property(e => e.emsa_RepresentanteNombre).HasMaxLength(200);

                entity.Property(e => e.emsa_RepresentanteSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.emsa_RepresentanteTelefono).HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<VW_tbEstadosCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEstadosCiviles", "GRAL");

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.eciv_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.eciv_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbEvidenciasPorCaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEvidenciasPorCaso", "CALE");

                entity.Property(e => e.evca_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.evca_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.evca_NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.evca_UrlArchivo)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.tiev_Descripcion).HasMaxLength(200);
            });

            modelBuilder.Entity<VW_tbMunicipios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMunicipios", "GRAL");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.user_Modificacion).HasMaxLength(255);
            });

            modelBuilder.Entity<VW_tbTiposdeCaso>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposdeCaso", "CALE");

                entity.Property(e => e.tica_Descripcion).HasMaxLength(200);

                entity.Property(e => e.tica_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tica_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tica_Nombre).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbTiposdeEvidencia>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTiposdeEvidencia", "CALE");

                entity.Property(e => e.tiev_Descripcion).HasMaxLength(200);

                entity.Property(e => e.tiev_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tiev_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tiev_Nombre).HasMaxLength(100);
            });

            modelBuilder.Entity<tbAbogadosJueces>(entity =>
            {
                entity.HasKey(e => e.abju_Id)
                    .HasName("PK_CALE_tbAbogadosJueces_abog_Id");

                entity.ToTable("tbAbogadosJueces", "CALE");

                entity.Property(e => e.abju_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.abju_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.abju_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.abju_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.abju_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.abju_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.abju_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.abju_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.abju_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.abju_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.abju_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.abju_UsuCreacionNavigation)
                    .WithMany(p => p.tbAbogadosJuecesabju_UsuCreacionNavigation)
                    .HasForeignKey(d => d.abju_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.abju_UsuModificacionNavigation)
                    .WithMany(p => p.tbAbogadosJuecesabju_UsuModificacionNavigation)
                    .HasForeignKey(d => d.abju_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.carg)
                    .WithMany(p => p.tbAbogadosJueces)
                    .HasForeignKey(d => d.carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbCargos_carg_Id");

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbAbogadosJueces)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbAbogadosJueces)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAbogadosJueces_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbAcusadoPorCaso>(entity =>
            {
                entity.HasKey(e => e.acus_Id)
                    .HasName("PK_CALE_tbAcusadoPorCaso_soca_Id");

                entity.ToTable("tbAcusadoPorCaso", "CALE");

                entity.Property(e => e.acus_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.acus_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.acus_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.acus_TipoAcusado)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.acus_UsuCreacionNavigation)
                    .WithMany(p => p.tbAcusadoPorCasoacus_UsuCreacionNavigation)
                    .HasForeignKey(d => d.acus_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.acus_UsuModificacionNavigation)
                    .WithMany(p => p.tbAcusadoPorCasoacus_UsuModificacionNavigation)
                    .HasForeignKey(d => d.acus_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.caso)
                    .WithMany(p => p.tbAcusadoPorCaso)
                    .HasForeignKey(d => d.caso_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbAcusadoPorCaso_CALE_tbCasos_caso_Id");
            });

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.carg_Id)
                    .HasName("PK_GRAL_tbcargos_carg_Id");

                entity.ToTable("tbCargos", "GRAL");

                entity.Property(e => e.carg_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.carg_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.carg_UsuCreacionNavigation)
                    .WithMany(p => p.tbCargoscarg_UsuCreacionNavigation)
                    .HasForeignKey(d => d.carg_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbCargos_acce_tbUsuarios_carg_UsuCreacion");

                entity.HasOne(d => d.carg_UsuModificacionNavigation)
                    .WithMany(p => p.tbCargoscarg_UsuModificacionNavigation)
                    .HasForeignKey(d => d.carg_UsuModificacion)
                    .HasConstraintName("FK_GRAL_tbCargos_acce_tbUsuarios_carg_UsuModificacion");
            });

            modelBuilder.Entity<tbCasos>(entity =>
            {
                entity.HasKey(e => e.caso_Id)
                    .HasName("PK_CALE_tbCasos_caso_Id");

                entity.ToTable("tbCasos", "CALE");

                entity.Property(e => e.caso_Descripcion).HasMaxLength(200);

                entity.Property(e => e.caso_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.caso_Fecha)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.caso_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.caso_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.caso_TipoDemandante)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.abju_IdAbogadoDemandadoNavigation)
                    .WithMany(p => p.tbCasosabju_IdAbogadoDemandadoNavigation)
                    .HasForeignKey(d => d.abju_IdAbogadoDemandado)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_abju_IdAbogadoDemandado_CALE_tbAbogadosJueces_abju_IdAbogadoDemandado");

                entity.HasOne(d => d.abju_IdAbogadoDemandanteNavigation)
                    .WithMany(p => p.tbCasosabju_IdAbogadoDemandanteNavigation)
                    .HasForeignKey(d => d.abju_IdAbogadoDemandante)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_abju_IdAbogadoDemandante_CALE_tbAbogadosJueces_abju_Id");

                entity.HasOne(d => d.abju_IdJuezNavigation)
                    .WithMany(p => p.tbCasosabju_IdJuezNavigation)
                    .HasForeignKey(d => d.abju_IdJuez)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_abju_IdJuez_CALE_tbAbogadosJueces_caso_Juez");

                entity.HasOne(d => d.tica)
                    .WithMany(p => p.tbCasos)
                    .HasForeignKey(d => d.tica_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_tica_Id_CALE_tbTiposdeCaso_tica_Id");

                entity.HasOne(d => d.usua_IdCreacionNavigation)
                    .WithMany(p => p.tbCasosusua_IdCreacionNavigation)
                    .HasForeignKey(d => d.usua_IdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCasos_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_IdModificacionNavigation)
                    .WithMany(p => p.tbCasosusua_IdModificacionNavigation)
                    .HasForeignKey(d => d.usua_IdModificacion)
                    .HasConstraintName("FK_CALE_tbCasos_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbCiviles>(entity =>
            {
                entity.HasKey(e => e.civi_Id)
                    .HasName("PK_CALE_tbCiviles_civi_Id");

                entity.ToTable("tbCiviles", "CALE");

                entity.Property(e => e.civi_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.civi_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.civi_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.civi_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.civi_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.civi_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.civi_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.civi_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.civi_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.civi_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.civi_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.civi_UsuCreacionNavigation)
                    .WithMany(p => p.tbCivilescivi_UsuCreacionNavigation)
                    .HasForeignKey(d => d.civi_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.civi_UsuModificacionNavigation)
                    .WithMany(p => p.tbCivilescivi_UsuModificacionNavigation)
                    .HasForeignKey(d => d.civi_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbCiviles_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbCiviles)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbCiviles)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbCiviles_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.depa_Id)
                    .HasName("PK_GRAL_tbDepartamentos_depa_Id");

                entity.ToTable("tbDepartamentos", "GRAL");

                entity.Property(e => e.depa_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.depa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.depa_UsuCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuCreacionNavigation)
                    .HasForeignKey(d => d.depa_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbDepartamentos_ACCE_tbUsuarios_depa_UsuCreacion_usua_Id");

                entity.HasOne(d => d.depa_UsuModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuModificacionNavigation)
                    .HasForeignKey(d => d.depa_UsuModificacion)
                    .HasConstraintName("FK_GRAL_tbDepartamentos_ACCE_tbUsuarios_depa_UsuModificacion_usua_Id");
            });

            modelBuilder.Entity<tbDetallesVeredictos>(entity =>
            {
                entity.HasKey(e => e.deve_Id)
                    .HasName("PK_CALE_tbDetallesVeredictos_deve_Id");

                entity.ToTable("tbDetallesVeredictos", "CALE");

                entity.Property(e => e.deve_EsCulpable).HasDefaultValueSql("((0))");

                entity.Property(e => e.deve_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.deve_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.deve_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.deve_TipoEmpresaCivil)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.deve_UsuCreacionNavigation)
                    .WithMany(p => p.tbDetallesVeredictosdeve_UsuCreacionNavigation)
                    .HasForeignKey(d => d.deve_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.deve_UsuModificacionNavigation)
                    .WithMany(p => p.tbDetallesVeredictosdeve_UsuModificacionNavigation)
                    .HasForeignKey(d => d.deve_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.vere)
                    .WithMany(p => p.tbDetallesVeredictos)
                    .HasForeignKey(d => d.vere_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbDetallesVeredictos_CALE_TBvEREDICTOS_vere_Id");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empe_Id)
                    .HasName("PK_CALE_tbEmpleados_empe_Id");

                entity.ToTable("tbEmpleados", "CALE");

                entity.Property(e => e.empe_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empe_CorreoElectronico)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.empe_DNI)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.empe_Direccion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.empe_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.empe_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.empe_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empe_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empe_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.empe_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empe_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.empe_UsuCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosempe_UsuCreacionNavigation)
                    .HasForeignKey(d => d.empe_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.empe_UsuModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosempe_UsuModificacionNavigation)
                    .HasForeignKey(d => d.empe_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbEmpleados_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpleados_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbEmpresas>(entity =>
            {
                entity.HasKey(e => e.emsa_Id)
                    .HasName("PK_CALE_tbEmpresas_emsa_Id");

                entity.ToTable("tbEmpresas", "CALE");

                entity.Property(e => e.emsa_Direccion).HasMaxLength(250);

                entity.Property(e => e.emsa_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.emsa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.emsa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.emsa_Nombre).HasMaxLength(200);

                entity.Property(e => e.emsa_RTN).HasMaxLength(20);

                entity.Property(e => e.emsa_RepresentanteDNI).HasMaxLength(20);

                entity.Property(e => e.emsa_RepresentanteNombre).HasMaxLength(200);

                entity.Property(e => e.emsa_RepresentanteSexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.emsa_RepresentanteTelefono).HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbEmpresas)
                    .HasForeignKey(d => d.eciv_Id)
                    .HasConstraintName("FK_CALE_tbEmpresas_GRAL_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.emsa_UsuCreacionNavigation)
                    .WithMany(p => p.tbEmpresasemsa_UsuCreacionNavigation)
                    .HasForeignKey(d => d.emsa_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpresas_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.emsa_UsuModificacionNavigation)
                    .WithMany(p => p.tbEmpresasemsa_UsuModificacionNavigation)
                    .HasForeignKey(d => d.emsa_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbEmpresas_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbEmpresas)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEmpresas_GRAL_tbMunicipios_muni_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.eciv_Id)
                    .HasName("PK_GRAL_tbEstadosCiviles_eciv_Id");

                entity.ToTable("tbEstadosCiviles", "GRAL");

                entity.Property(e => e.eciv_Descripcion)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.eciv_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.eciv_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.eciv_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbEvidenciasPorCaso>(entity =>
            {
                entity.HasKey(e => e.evca_Id)
                    .HasName("PK_CALE_tbEvidenciasPorCaso_evca_Id");

                entity.ToTable("tbEvidenciasPorCaso", "CALE");

                entity.Property(e => e.evca_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.evca_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.evca_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.evca_NombreArchivo)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.evca_UrlArchivo)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.caso)
                    .WithMany(p => p.tbEvidenciasPorCaso)
                    .HasForeignKey(d => d.caso_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.evca_UsuCreacionNavigation)
                    .WithMany(p => p.tbEvidenciasPorCasoevca_UsuCreacionNavigation)
                    .HasForeignKey(d => d.evca_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.evca_UsuModificacionNavigation)
                    .WithMany(p => p.tbEvidenciasPorCasoevca_UsuModificacionNavigation)
                    .HasForeignKey(d => d.evca_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_ACCE_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.tiev)
                    .WithMany(p => p.tbEvidenciasPorCaso)
                    .HasForeignKey(d => d.tiev_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbEvidenciasPorCaso_CALE_tbTiposdeEvidencia_tiev_Id");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_GRAL_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "GRAL");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.HasOne(d => d.depa)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.depa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbMunicipios_GRAL_tbDepartamentos_depa_Id");

                entity.HasOne(d => d.muni_UsuCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuCreacionNavigation)
                    .HasForeignKey(d => d.muni_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_GRAL_tbMunicipios_ACCE_tbUsuarios_muni_UsuCreacion_usua_Id");

                entity.HasOne(d => d.muni_UsuModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuModificacionNavigation)
                    .HasForeignKey(d => d.muni_UsuModificacion)
                    .HasConstraintName("FK_GRAL_tbMunicipios_ACCE_tbUsuarios_muni_UsuModificacion_usua_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK_ACCE_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "ACCE");

                entity.Property(e => e.pant_Esquema)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pant_Href)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_Icono)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pant_Pantalla)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.usua_IdCreacionNavigation)
                    .WithMany(p => p.tbPantallasusua_IdCreacionNavigation)
                    .HasForeignKey(d => d.usua_IdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbPantallas_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_IdModificacionNavigation)
                    .WithMany(p => p.tbPantallasusua_IdModificacionNavigation)
                    .HasForeignKey(d => d.usua_IdModificacion)
                    .HasConstraintName("FK_ACCE_tbPantallas_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK_ACCE_tbRoles_role_Id");

                entity.ToTable("tbRoles", "ACCE");

                entity.Property(e => e.role_Descripcion)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.role_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.usua_IdCreacionNavigation)
                    .WithMany(p => p.tbRolesusua_IdCreacionNavigation)
                    .HasForeignKey(d => d.usua_IdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRoles_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_IdModificacionNavigation)
                    .WithMany(p => p.tbRolesusua_IdModificacionNavigation)
                    .HasForeignKey(d => d.usua_IdModificacion)
                    .HasConstraintName("FK_ACCE_tbRoles_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbRolesPorPantalla>(entity =>
            {
                entity.HasKey(e => e.ropa_Id)
                    .HasName("PK_ACCE_tbRolesPorPantalla_ropa_Id");

                entity.ToTable("tbRolesPorPantalla", "ACCE");

                entity.Property(e => e.ropa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.ropa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ropa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbRolesPorPantalla)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_pant_Id_ACCE_tbPantallas_pant_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbRolesPorPantalla)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_role_Id_ACCE_tbRoles_role_Id");

                entity.HasOne(d => d.usua_IdCreacionNavigation)
                    .WithMany(p => p.tbRolesPorPantallausua_IdCreacionNavigation)
                    .HasForeignKey(d => d.usua_IdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_IdModificacionNavigation)
                    .WithMany(p => p.tbRolesPorPantallausua_IdModificacionNavigation)
                    .HasForeignKey(d => d.usua_IdModificacion)
                    .HasConstraintName("FK_ACCE_tbRolesPorPantalla_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTestigosPorCaso>(entity =>
            {
                entity.HasKey(e => e.teca_Id)
                    .HasName("PK_CALE_tbTestigosPorCaso_teca_Id");

                entity.ToTable("tbTestigosPorCaso", "CALE");

                entity.Property(e => e.teca_Declaracion).IsRequired();

                entity.Property(e => e.teca_Demandado).HasDefaultValueSql("((0))");

                entity.Property(e => e.teca_Demandante).HasDefaultValueSql("((0))");

                entity.Property(e => e.teca_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.teca_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.teca_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.caso)
                    .WithMany(p => p.tbTestigosPorCaso)
                    .HasForeignKey(d => d.caso_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.teca_TestigoNavigation)
                    .WithMany(p => p.tbTestigosPorCaso)
                    .HasForeignKey(d => d.teca_Testigo)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_CALE_tbCiviles_civi_Id");

                entity.HasOne(d => d.teca_UsuCreacionNavigation)
                    .WithMany(p => p.tbTestigosPorCasoteca_UsuCreacionNavigation)
                    .HasForeignKey(d => d.teca_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.teca_UsuModificacionNavigation)
                    .WithMany(p => p.tbTestigosPorCasoteca_UsuModificacionNavigation)
                    .HasForeignKey(d => d.teca_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbTestigosPorCaso_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<tbTiposdeCaso>(entity =>
            {
                entity.HasKey(e => e.tica_Id)
                    .HasName("PK_CALE_tbTiposdeCaso_tica_Id");

                entity.ToTable("tbTiposdeCaso", "CALE");

                entity.Property(e => e.tica_Descripcion).HasMaxLength(200);

                entity.Property(e => e.tica_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.tica_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tica_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tica_Nombre).HasMaxLength(100);

                entity.HasOne(d => d.tica_UsuCreacionNavigation)
                    .WithMany(p => p.tbTiposdeCasotica_UsuCreacionNavigation)
                    .HasForeignKey(d => d.tica_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTiposdeCaso_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.tica_UsuModificacionNavigation)
                    .WithMany(p => p.tbTiposdeCasotica_UsuModificacionNavigation)
                    .HasForeignKey(d => d.tica_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbTiposdeCaso_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<tbTiposdeEvidencia>(entity =>
            {
                entity.HasKey(e => e.tiev_Id)
                    .HasName("PK_CALE_tbTiposdeEvidencia_tiev_Id");

                entity.ToTable("tbTiposdeEvidencia", "CALE");

                entity.Property(e => e.tiev_Descripcion).HasMaxLength(200);

                entity.Property(e => e.tiev_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.tiev_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tiev_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tiev_Nombre).HasMaxLength(100);

                entity.HasOne(d => d.tiev_UsuCreacionNavigation)
                    .WithMany(p => p.tbTiposdeEvidenciatiev_UsuCreacionNavigation)
                    .HasForeignKey(d => d.tiev_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbTiposdeEvidencia_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.tiev_UsuModificacionNavigation)
                    .WithMany(p => p.tbTiposdeEvidenciatiev_UsuModificacionNavigation)
                    .HasForeignKey(d => d.tiev_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbTiposdeEvidencia_ACCE_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usua_Id)
                    .HasName("PK_ACCE_tbUsuarios_usua_Id");

                entity.ToTable("tbUsuarios", "ACCE");

                entity.Property(e => e.usua_Clave).IsRequired();

                entity.Property(e => e.usua_EsAdmin).HasDefaultValueSql("((0))");

                entity.Property(e => e.usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.usua_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_Nombre)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.role_Id)
                    .HasConstraintName("FK_ACCE_tbUsuarios_role_Id_ACCE_tbRoles_role_Id");

                entity.HasOne(d => d.usua_IdCreacionNavigation)
                    .WithMany(p => p.Inverseusua_IdCreacionNavigation)
                    .HasForeignKey(d => d.usua_IdCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ACCE_tbUsuarios_usua_IdCreacion_ACCE_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_IdModificacionNavigation)
                    .WithMany(p => p.Inverseusua_IdModificacionNavigation)
                    .HasForeignKey(d => d.usua_IdModificacion)
                    .HasConstraintName("FK_ACCE_tbUsuarios_usua_IdModificacion_ACCE_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbVeredictos>(entity =>
            {
                entity.HasKey(e => e.vere_Id)
                    .HasName("PK_CALE_tbVeredictos_teca_Id");

                entity.ToTable("tbVeredictos", "CALE");

                entity.Property(e => e.vere_Descripcion).HasMaxLength(300);

                entity.Property(e => e.vere_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.vere_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.vere_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.caso)
                    .WithMany(p => p.tbVeredictos)
                    .HasForeignKey(d => d.caso_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbVeredictos_CALE_tbCasos_caso_Id");

                entity.HasOne(d => d.vere_UsuCreacionNavigation)
                    .WithMany(p => p.tbVeredictosvere_UsuCreacionNavigation)
                    .HasForeignKey(d => d.vere_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_CALE_tbVeredictos_ACCE_tbUsuarios_UserCreate");

                entity.HasOne(d => d.vere_UsuModificacionNavigation)
                    .WithMany(p => p.tbVeredictosvere_UsuModificacionNavigation)
                    .HasForeignKey(d => d.vere_UsuModificacion)
                    .HasConstraintName("FK_CALE_tbVeredictos_ACCE_tbUsuarios_UserUpdate");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}